<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="371" passed="371" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-30T15:18:37 CEST" name="Surefire suite" finished-at="2020-07-30T15:18:42 CEST" duration-ms="4527">
    <groups>
    </groups>
    <test started-at="2020-07-30T15:18:37 CEST" name="Surefire test" finished-at="2020-07-30T15:18:42 CEST" duration-ms="4527">
      <class name="com.hotels.beans.conversion.processor.impl.DoubleConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, double)[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToDoubleConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, double)[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToDoubleConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a Double. At least 8 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a Double. At least 8 bytes are required.
at com.hotels.beans.conversion.processor.impl.DoubleConversionProcessor.lambda$convertByteArray$0(DoubleConversionProcessor.java:52)
at com.hotels.beans.conversion.processor.impl.DoubleConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(DoubleConversionTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.DoubleConversionTest@178f268a]" started-at="2020-07-30T15:18:42 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.DoubleConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, java.math.BigInteger)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToIntConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, java.math.BigInteger)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToIntConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a BigInteger. At least 8 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a BigInteger. At least 8 bytes are required.
at com.hotels.beans.conversion.processor.impl.BigIntegerConversionProcessor.lambda$convertByteArray$1(BigIntegerConversionProcessor.java:53)
at com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(BigIntegerConversionTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest@329bad59]" started-at="2020-07-30T15:18:42 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.BigIntegerConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.LongConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, long)[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToLongConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, long)[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToLongConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a Long. At least 8 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a Long. At least 8 bytes are required.
at com.hotels.beans.conversion.processor.impl.LongConversionProcessor.lambda$convertByteArray$0(LongConversionProcessor.java:52)
at com.hotels.beans.conversion.processor.impl.LongConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(LongConversionTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.LongConversionTest@7132a9dc]" started-at="2020-07-30T15:18:41 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.LongConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.ShortConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, short)[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToShortConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, short)[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToShortConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a Short. At least 2 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a Short. At least 2 bytes are required.
at com.hotels.beans.conversion.processor.impl.ShortConversionProcessor.lambda$convertByteArray$0(ShortConversionProcessor.java:52)
at com.hotels.beans.conversion.processor.impl.ShortConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(ShortConversionTest.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ShortConversionTest@61bfc9bf]" started-at="2020-07-30T15:18:41 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.ShortConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.ByteConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, byte)[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToByteConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, byte)[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToByteConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteConversionTest@2c7106d9]" started-at="2020-07-30T15:18:42 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.ByteConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, java.math.BigDecimal)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToIntConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, java.math.BigDecimal)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToIntConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a BigDecimal. At least 8 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a BigDecimal. At least 8 bytes are required.
at com.hotels.beans.conversion.processor.impl.BigDecimalConversionProcessor.lambda$convertByteArray$1(BigDecimalConversionProcessor.java:53)
at com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(BigDecimalConversionTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest@33ecbd6c]" started-at="2020-07-30T15:18:42 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.BigDecimalConversionTest -->
      <class name="com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:37 CEST" name="beforeClass" finished-at="2020-07-30T15:18:40 CEST" duration-ms="2947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testGetConversionFunctionReturnsAnEmptyOptional(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:40 CEST" name="testGetConversionFunctionReturnsAnEmptyOptional" data-provider="dataGetConversionFunctionEmptyCaseTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an empty optional in case the source field type is equal to the destination field type]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsAnEmptyOptional -->
        <test-method signature="testGetConversionFunctionReturnsAnEmptyOptional(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsAnEmptyOptional" data-provider="dataGetConversionFunctionEmptyCaseTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an empty optional in case the source field type is not equal to the source field type but it's not primitive]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.apache.commons.lang3.tuple.Pair]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsAnEmptyOptional -->
        <test-method signature="testGetConversionFunctionReturnsAnEmptyOptional(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsAnEmptyOptional" data-provider="dataGetConversionFunctionEmptyCaseTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an empty optional in case the source field type is not equal to the source field type and the destination type is void]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.Void]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsAnEmptyOptional -->
        <test-method signature="testGetConversionFunctionReturnsAnEmptyOptional(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsAnEmptyOptional" data-provider="dataGetConversionFunctionEmptyCaseTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an empty optional in case the source field type is not equal to the source field type and the source type is void]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Void]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsAnEmptyOptional -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a IntegerConversionProcessor that converts from String to int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor$$Lambda$134/0x0000000800253440@43efe064]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor that converts from byte to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$135/0x0000000800252840@2c6a6ce3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ShortConversionProcessor that converts from short to byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.ByteConversionProcessor$$Lambda$136/0x0000000800252c40@4e3a6c83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor that converts from int to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$137/0x0000000800252040@74faf450]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a IntegerConversionProcessor that converts from long to int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor$$Lambda$138/0x0000000800252440@49005dc4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a DoubleConversionProcessor that converts from float to double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.DoubleConversionProcessor$$Lambda$139/0x0000000800290440@25d9298e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a FloatConversionProcessor that converts from double to float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.FloatConversionProcessor$$Lambda$140/0x0000000800290c40@219db855]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor that converts from char to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$141/0x0000000800291040@5b7b0ada]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor that converts from char to boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.CharacterConversionProcessor$$Lambda$142/0x0000000800291440@3c4e23be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BooleanConversionProcessor that converts from String to boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.BooleanConversionProcessor$$Lambda$143/0x0000000800291840@1ec4fdcf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigIntegerConversionProcessor that converts from BigDecimal to BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.BigIntegerConversionProcessor$$Lambda$144/0x0000000800291c40@488b46da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimalConversionProcessor that converts from String to BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.BigDecimalConversionProcessor$$Lambda$145/0x0000000800292040@3c74d846]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest@2d7a9786]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ByteConversionProcessor that converts from String to byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class [B]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.ByteArrayConversionProcessor$$Lambda$146/0x0000000800292440@5552d10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
      </class> <!-- com.hotels.beans.conversion.analyzer.ConversionAnalyzerTest -->
      <class name="com.hotels.beans.conversion.processor.impl.BooleanConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult(java.lang.String, java.math.BigDecimal, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" data-provider="bigDecimalToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult(java.lang.String, java.math.BigInteger, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" data-provider="bigIntegerToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult(java.lang.String, java.math.BigDecimal, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" data-provider="bigDecimalToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult(java.lang.String, java.math.BigInteger, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" data-provider="bigIntegerToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult(java.lang.String, [B, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" data-provider="byteArrayToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@752ffce3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult(java.lang.String, [B, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" data-provider="byteArrayToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@180e33b0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteShouldReturnProperResult(java.lang.String, byte, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" data-provider="byteToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertByteShouldReturnProperResult(java.lang.String, byte, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" data-provider="byteToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult(java.lang.String, double, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" data-provider="floatToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult(java.lang.String, double, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" data-provider="floatToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult(java.lang.String, float, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" data-provider="floatToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult(java.lang.String, float, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" data-provider="floatToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult(java.lang.String, int, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" data-provider="intToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult(java.lang.String, int, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" data-provider="intToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult(java.lang.String, long, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" data-provider="longToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult(java.lang.String, long, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" data-provider="longToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult(java.lang.String, short, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" data-provider="shortToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns false if the value is 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult(java.lang.String, short, boolean)[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" data-provider="shortToBooleanConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns true if the value is not 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.BooleanConversionTest@527fc8e]" started-at="2020-07-30T15:18:41 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.BooleanConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.IntegerConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, int)[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToIntConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, int)[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToIntConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents an Integer. At least 4 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents an Integer. At least 4 bytes are required.
at com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor.lambda$convertByteArray$0(IntegerConversionProcessor.java:51)
at com.hotels.beans.conversion.processor.impl.IntegerConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(IntegerConversionTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.IntegerConversionTest@57435801]" started-at="2020-07-30T15:18:41 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.IntegerConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.FloatConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, float)[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToFloatConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 1 if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, float)[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToFloatConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns 0 if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a Float. At least 4 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a Float. At least 4 bytes are required.
at com.hotels.beans.conversion.processor.impl.FloatConversionProcessor.lambda$convertByteArray$0(FloatConversionProcessor.java:52)
at com.hotels.beans.conversion.processor.impl.FloatConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(FloatConversionTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.FloatConversionTest@707b1a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.FloatConversionTest -->
      <class name="com.hotels.beans.conversion.ConverterTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@712e4b18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@22617270]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@408d12fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@2696b687]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@7a600e21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@53016c98]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@52849956]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@1d38cdde]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@69dc7b24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@5f8d4b51]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertByteArrayValueWorksProperly(java.lang.String, java.lang.Object, [B)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayValueWorksProperly" data-provider="dataConvertByteArrayValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte[] value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@658098a2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayValueWorksProperly -->
        <test-method signature="testConvertValueRaisesExceptionIfItsCalledWithNullTargetClassParam()[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueRaisesExceptionIfItsCalledWithNullTargetClassParam" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The destination field type cannot be null.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The destination field type cannot be null.
at com.hotels.transformer.validator.Validator.notNull(Validator.java:78)
at com.hotels.beans.conversion.ConverterImpl.convertValue(ConverterImpl.java:59)
at com.hotels.beans.conversion.ConverterTest.testConvertValueRaisesExceptionIfItsCalledWithNullTargetClassParam(ConverterTest.java:172)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueRaisesExceptionIfItsCalledWithNullTargetClassParam -->
        <test-method signature="testConvertValueRaisesExceptionInCaseNoConverterIsDefined()[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueRaisesExceptionInCaseNoConverterIsDefined" finished-at="2020-07-30T15:18:41 CEST" duration-ms="5" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[No converter available for type: java.lang.Void]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: No converter available for type: java.lang.Void
at com.hotels.beans.conversion.ConverterImpl.lambda$convertValue$1(ConverterImpl.java:67)
at java.base/java.util.Optional.orElseThrow(Optional.java:408)
at com.hotels.beans.conversion.ConverterImpl.convertValue(ConverterImpl.java:67)
at com.hotels.beans.conversion.ConverterTest.testConvertValueRaisesExceptionInCaseNoConverterIsDefined(ConverterTest.java:488)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueRaisesExceptionInCaseNoConverterIsDefined -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a null value in case the value to convert is null]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a boolean value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a byte value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@1d38cdde]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a char value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Ă]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a double value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8.20788039913184E-304]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a float value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2.3879393E-38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an int value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a int value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[16909060]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a long value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[72623859790382856]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a short value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[258]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a String value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigInteger value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[72623859790382856]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testConvertValueWorksProperly(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testConvertValueWorksProperly" data-provider="dataConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimal value from a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@3809f65d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8.20788039913184E-304]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValueWorksProperly -->
        <test-method signature="testGetConversionFunctionReturnsAnEmptyOptional(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsAnEmptyOptional" data-provider="dataGetConversionFunctionEmptyCaseTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an empty optional in case the source field type is not equal to the source field type but it's not primitive]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.apache.commons.lang3.tuple.Pair]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsAnEmptyOptional -->
        <test-method signature="testGetConversionFunctionReturnsAnEmptyOptional(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsAnEmptyOptional" data-provider="dataGetConversionFunctionEmptyCaseTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns an empty optional in case the source field type is not equal to the source field type and the destination type is void]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.Void]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsAnEmptyOptional -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor that converts from byte to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$135/0x0000000800252840@2c6a6ce3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a IntegerConversionProcessor that converts from String to int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor$$Lambda$134/0x0000000800253440@43efe064]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor that converts from int to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$137/0x0000000800252040@74faf450]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ShortConversionProcessor that converts from short to byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.ByteConversionProcessor$$Lambda$136/0x0000000800252c40@4e3a6c83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a IntegerConversionProcessor that converts from long to int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor$$Lambda$138/0x0000000800252440@49005dc4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a DoubleConversionProcessor that converts from float to double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.DoubleConversionProcessor$$Lambda$139/0x0000000800290440@25d9298e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor that converts from char to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$141/0x0000000800291040@5b7b0ada]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BooleanConversionProcessor that converts from boolean to char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.BooleanConversionProcessor$$Lambda$166/0x0000000800297440@49322d04]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a FloatConversionProcessor that converts from double to float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.FloatConversionProcessor$$Lambda$140/0x0000000800290c40@219db855]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor that converts from BigInteger to BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.BigDecimalConversionProcessor$$Lambda$269/0x00000008002ba840@56b48163]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor that converts from char to boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.CharacterConversionProcessor$$Lambda$142/0x0000000800291440@3c4e23be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor that converts from BigDecimal to BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.BigIntegerConversionProcessor$$Lambda$144/0x0000000800291c40@488b46da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
        <test-method signature="testGetConversionFunctionReturnsTheExpectedConversionFunction(java.lang.String, java.lang.Class, java.lang.Class, java.util.function.Function)[pri:0, instance:com.hotels.beans.conversion.ConverterTest@4527f70a]" started-at="2020-07-30T15:18:41 CEST" name="testGetConversionFunctionReturnsTheExpectedConversionFunction" data-provider="dataGetConversionFunctionTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor that converts from byte[] to String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class [B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.hotels.beans.conversion.processor.impl.StringConversionProcessor$$Lambda$250/0x00000008002ab040@4cd1716d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionFunctionReturnsTheExpectedConversionFunction -->
      </class> <!-- com.hotels.beans.conversion.ConverterTest -->
      <class name="com.hotels.beans.conversion.processor.impl.StringConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.StringConversionTest@5c723f2d]" started-at="2020-07-30T15:18:42 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.StringConversionTest -->
      <class name="com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testGetConversionProcessorReturnsNullInCaseNoProcessorExistsForTheGivenType()[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorReturnsNullInCaseNoProcessorExistsForTheGivenType" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorReturnsNullInCaseNoProcessorExistsForTheGivenType -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ByteConversionProcessor is case the target class ia a byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[byte]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.ByteConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ByteConversionProcessor is case the target class ia a Byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Byte]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.ByteConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a IntegerConversionProcessor is case the target class is an Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Integer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ShortConversionProcessor is case the target class ia a Short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Short]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.ShortConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ShortConversionProcessor is case the target class ia a short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[short]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.ShortConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a LongConversionProcessor is case the target class is a Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Long]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.LongConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a IntegerConversionProcessor is case the target class is an int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.IntegerConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a LongConversionProcessor is case the target class is a long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[long]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.LongConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a FloatConversionProcessor is case the target class is a Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Float]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.FloatConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a FloatConversionProcessor is case the target class is a float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[float]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.FloatConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a DoubleConversionProcessor is case the target class is a Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Double]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.DoubleConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a DoubleConversionProcessor is case the target class is a double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.DoubleConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor is case the target class is a Character]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Character]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.CharacterConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BooleanConversionProcessor is case the target class is a Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.Boolean]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.BooleanConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a CharacterConversionProcessor is case the target class is a char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[char]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.CharacterConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a StringConversionProcessor is case the target class is a String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.StringConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BooleanConversionProcessor is case the target class is a boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[boolean]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.BooleanConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a ByteConversionProcessor is case the target class is a byte[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class [B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.ByteArrayConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigIntegerConversionProcessor is case the target class is a BigInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.math.BigInteger]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.BigIntegerConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
        <test-method signature="testGetConversionProcessorWorksAsExpected(java.lang.String, java.lang.Class, java.lang.Class)[pri:0, instance:com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest@432f521f]" started-at="2020-07-30T15:18:42 CEST" name="testGetConversionProcessorWorksAsExpected" data-provider="dataGetConversionProcessorTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns a BigDecimalConversionProcessor is case the target class is a BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.hotels.beans.conversion.processor.impl.BigDecimalConversionProcessor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConversionProcessorWorksAsExpected -->
      </class> <!-- com.hotels.beans.conversion.processor.ConversionProcessorFactoryTest -->
      <class name="com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="beforeClass" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, [B)[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToByteConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns {1} if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@77648321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, [B)[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToByteConvertValueTesting" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns {0} if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@2c51c756]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest@862f408]" started-at="2020-07-30T15:18:42 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:42 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.ByteArrayConversionTest -->
      <class name="com.hotels.beans.conversion.processor.impl.CharacterConversionTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="beforeClass" finished-at="2020-07-30T15:18:41 CEST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testConvertBigDecimalShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigDecimalShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigDecimalShouldReturnProperResult -->
        <test-method signature="testConvertBigIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBigIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBigIntegerShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, char)[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToCharConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns F if the value is false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertBooleanShouldReturnProperResult(java.lang.String, boolean, char)[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertBooleanShouldReturnProperResult" data-provider="booleanToCharConvertValueTesting" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tests that the method returns T if the value is true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[T]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertBooleanShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldReturnProperResult -->
        <test-method signature="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <exception class="com.hotels.beans.conversion.error.TypeConversionException">
            <message>
              <![CDATA[Not enough byte to represents a Char. At least 2 bytes are required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.hotels.beans.conversion.error.TypeConversionException: Not enough byte to represents a Char. At least 2 bytes are required.
at com.hotels.beans.conversion.processor.impl.CharacterConversionProcessor.lambda$convertByteArray$1(CharacterConversionProcessor.java:51)
at com.hotels.beans.conversion.processor.impl.CharacterConversionTest.testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall(CharacterConversionTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.hotels.beans.conversion.error.TypeConversionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteArrayShouldThrowExceptionIfByteArrayIsTooSmall -->
        <test-method signature="testConvertByteShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertByteShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertByteShouldReturnProperResult -->
        <test-method signature="testConvertCharacterShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertCharacterShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCharacterShouldReturnProperResult -->
        <test-method signature="testConvertIntegerShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertIntegerShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertIntegerShouldReturnProperResult -->
        <test-method signature="testConvertDoubleShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertDoubleShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDoubleShouldReturnProperResult -->
        <test-method signature="testConvertFloatShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertFloatShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertFloatShouldReturnProperResult -->
        <test-method signature="testConvertShortShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertShortShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertShortShouldReturnProperResult -->
        <test-method signature="testConvertLongShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertLongShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertLongShouldReturnProperResult -->
        <test-method signature="testConvertStringShouldReturnProperResult()[pri:0, instance:com.hotels.beans.conversion.processor.impl.CharacterConversionTest@2da66a44]" started-at="2020-07-30T15:18:41 CEST" name="testConvertStringShouldReturnProperResult" finished-at="2020-07-30T15:18:41 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertStringShouldReturnProperResult -->
      </class> <!-- com.hotels.beans.conversion.processor.impl.CharacterConversionTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
