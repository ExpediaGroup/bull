<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="ROMC02YH0EEJGH7" failures="0" tests="45" name="com.hotels.transformer.utils.ReflectionUtilsTest" time="0.532" errors="0" timestamp="2020-07-30T15:18:24 CEST" skipped="0">
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetClassDeclaredFieldThrowsTheRightException" time="0.012"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testThatTheReturnedMethodFromGetGetterMethodReturnsTheExpectedValue" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodThrowsExceptionIfTheMethodDoesNotExists" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodCorrectlyHandlesExceptions" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsUndeclaredThrowableExceptionWhenGivenExceptionIsInvalidBeanException" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueCatchesRuntimeException" time="0.138"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldRaisesAnExceptionIfTheFieldDoesNotExists" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testMapGenericFieldTypeWorksProperlyForUnparametrizedMap" time="0.003"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetMapGenericTypeThrowsIllegalArgumentExceptionWhenTheGivenTypeIsNotAMap" time="0.018"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueInvokesTheSetterMethodInCaseAnExceptionIsRaised" time="0.006"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldWorksProperly" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testMapGenericFieldTypeWorksProperly" time="0.054"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsNullIfTheAnnotationDoesNotExists" time="0.003"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsRuntimeExceptionWhenGivenExceptionIsRuntimeException" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueThrowsExceptionIfTheFieldDoesNotExists" time="0.006"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsIllegalStateExceptionWhenGivenExceptionIsIllegalAccessException" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodRaisesAnIllegalArgumentExceptionIfTheArgumentIsWrong" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWithAGivenFieldWorksAsExpected" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueTriesToInjectThroughSetterMethodInCaseOfErrors" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.015"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodCorrectlyHandlesExceptions" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueWorksProperly" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessWorksAsExpected" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodWorksProperly" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueRaiseAnExceptionIfTheValueToSetIsNotValid" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldThrowsExceptionIfTheMethodDoesNotExists" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGenericFieldTypeWorksProperly" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsTheAnnotationIfExists" time="0.208"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldWorksProperly" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetSourceFieldValueRaisesAnExceptionIfTheParameterAreNull" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldWorksProperly" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldTypeWorksProperly" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetArrayTypeWorksProperly" time="0.001"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGenericFieldTypeWorksProperly" time="0.055"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodWorksProperly" time="0.000"/>
  <system-out/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsMissingMethodExceptionWhenGivenExceptionIsNoSuchMethodException" time="0.001"/>
  <system-out/>
</testsuite> <!-- com.hotels.transformer.utils.ReflectionUtilsTest -->
