<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="ROMC02YH0EEJGH7" failures="0" tests="165" name="Surefire test" time="4.189" errors="0" timestamp="2020-07-30T15:18:24 CEST">
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.174"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testGetConstraintViolationsWorksAsExpected" time="0.565"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testGetConstraintViolationsWorksAsExpected" time="0.042"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testNotNullRaisesAnExceptionWhenTheGivenObjectIsNull" time="0.0"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testNotNullRaisesAnExceptionWhenTheGivenObjectIsNull" time="0.0"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testThatNoExceptionAreThrownWhenTheGivenObjectIsNotNullEvenWithoutACustomMessage" time="0.0"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testThatNoExceptionAreThrownWhenTheGivenObjectIsNotNullEvenWithoutACustomMessage" time="0.0"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testValidateDoesNotThrowsExceptionWhenTheBeanIsValid" time="0.0"/>
  <testcase classname="com.hotels.transformer.validator.ValidatorTest" name="testValidateThrowsExceptionWhenTheBeanIsInvalid" time="0.001"/>
  <testcase classname="com.hotels.transformer.cache.CacheManagerFactoryTest" name="testGetCacheReturnsACacheManagerInstance" time="0.0"/>
  <testcase classname="com.hotels.transformer.cache.CacheManagerFactoryTest" name="testGetCacheThrowsExceptionIfTheCacheNameIsNull" time="0.0"/>
  <testcase classname="com.hotels.transformer.cache.CacheManagerTest" name="testCacheObjectStoresTheDefaultValueIfTheGivenObjectIsNull" time="0.003"/>
  <testcase classname="com.hotels.transformer.cache.CacheManagerTest" name="testCacheObjectStoresTheGivenObjectWithTheGivenKey" time="0.0"/>
  <testcase classname="com.hotels.transformer.cache.CacheManagerTest" name="testRemoveFromCacheRemovesTheObject" time="0.001"/>
  <testcase classname="com.hotels.transformer.cache.CacheManagerTest" name="testRemoveMatchingKeysFromCacheRemovesTheObject" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testAllParameterAnnotatedWithWorksAsExpected" time="0.011"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testAllParameterAnnotatedWithWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testAreParameterNamesAvailableWorksAsExpected" time="0.04"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testAreParameterNamesAvailableWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetAllArgsConstructorWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetBuildMethodReturnsTheBuildMethod" time="0.038"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetBuildMethodThrowsExceptionIfMethodIsMissing" time="0.009"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetBuildMethodThrowsExceptionIfMethodIsMissing" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetClassTypeWorksAsExpected" time="0.037"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetClassTypeWorksAsExpected" time="0.003"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetClassTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetConcreteClassWorksAsExpected" time="0.003"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetConcreteClassWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetConcreteClassWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetConcreteClassWorksAsExpected" time="0.014"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetConcreteClassWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetConstructorParameters" time="0.071"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetDeclaredClassesWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetDeclaredClassesWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetDeclaredFieldsWorksAsExpected" time="0.022"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetDeclaredFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetDeclaredFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetDefaultTypeValueWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetFieldClassWorksAsExpected" time="0.096"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetGetterMethodsWorksAsExpected" time="0.003"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetGetterMethodsWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetGetterMethodsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetGetterMethodsWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetInstanceRaisesAnInstanceCreationExceptionIfAnErrorOccurs" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetNoArgsConstructorThrowsExceptionIfTheConstructorIsMissing" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetNoArgsConstructorWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetNotFinalFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetNotFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFinalFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetSetterMethodsWorksAsExpected" time="0.004"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetSetterMethodsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetTotalFieldsWorksAsExpected" time="0.01"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testGetTotalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasAccessibleConstructorsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasAccessibleConstructorsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasFieldWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasFieldWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasPrivateFinalFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasSetterMethodsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testHasSetterMethodsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsBigDecimalWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsBigDecimalWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsBigIntegerWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsBigIntegerWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsBiteArrayWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsBiteArrayWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsStringWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ClassUtilsTest" name="testIsStringWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetArrayTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetClassDeclaredFieldThrowsTheRightException" time="0.012"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldRaisesAnExceptionIfTheFieldDoesNotExists" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetDeclaredFieldWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.015"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueCatchesRuntimeException" time="0.138"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueThrowsExceptionIfTheFieldDoesNotExists" time="0.006"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWithAGivenFieldWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGenericFieldTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGenericFieldTypeWorksProperly" time="0.055"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodThrowsExceptionIfTheMethodDoesNotExists" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetGetterMethodWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetMapGenericTypeThrowsIllegalArgumentExceptionWhenTheGivenTypeIsNotAMap" time="0.018"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsNullIfTheAnnotationDoesNotExists" time="0.003"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsTheAnnotationIfExists" time="0.208"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldThrowsExceptionIfTheMethodDoesNotExists" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testGetSourceFieldValueRaisesAnExceptionIfTheParameterAreNull" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsIllegalStateExceptionWhenGivenExceptionIsIllegalAccessException" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsMissingMethodExceptionWhenGivenExceptionIsNoSuchMethodException" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsRuntimeExceptionWhenGivenExceptionIsRuntimeException" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsUndeclaredThrowableExceptionWhenGivenExceptionIsInvalidBeanException" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodCorrectlyHandlesExceptions" time="0.001"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodCorrectlyHandlesExceptions" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodRaisesAnIllegalArgumentExceptionIfTheArgumentIsWrong" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testInvokeMethodWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testMapGenericFieldTypeWorksProperly" time="0.054"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testMapGenericFieldTypeWorksProperlyForUnparametrizedMap" time="0.003"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueInvokesTheSetterMethodInCaseAnExceptionIsRaised" time="0.006"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueRaiseAnExceptionIfTheValueToSetIsNotValid" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueTriesToInjectThroughSetterMethodInCaseOfErrors" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testSetFieldValueWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.transformer.utils.ReflectionUtilsTest" name="testThatTheReturnedMethodFromGetGetterMethodReturnsTheExpectedValue" time="0.001"/>
</testsuite> <!-- Surefire test -->
